{
  "version": 3,
  "sources": ["../../scripts/helpers/utils.js", "../../scripts/helpers/fade-scrubber-thumb.js", "../../scripts/template.js", "../../scripts/podcast-player.js"],
  "sourcesContent": ["// General utilities\n\nexport function formatTime(time) {\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor((time % 3600) / 60);\n    const seconds = Math.floor(time % 60);\n    return hours > 0\n        ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n        : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n}\n\nexport function isIOS() {\n    return /iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent) && !window.MSStream && (navigator.maxTouchPoints && navigator.maxTouchPoints > 1);\n}\n\n// sets the new value if previous value returns falsy\nexport function initLocalStorageItem(k, val) {\n    if (!localStorage.getItem(k)) { localStorage.setItem(k, val); }\n}\n\n// throttles a function to ensure it only runs once \n// per specified limit (in milliseconds)\nexport function throttle(func, limit) {\n    let lastFunc;\n    let lastRan;\n    return function (...args) {\n        const context = this;\n        if (!lastRan) {\n            func.apply(context, args);\n            lastRan = Date.now();\n        } else {\n            clearTimeout(lastFunc);\n            lastFunc = setTimeout(function () {\n                if ((Date.now() - lastRan) >= limit) {\n                    func.apply(context, args);\n                    lastRan = Date.now();\n                }\n            }, limit - (Date.now() - lastRan));\n        }\n    };\n}\n\nexport function updateCss(css, id = 'js-added-style', injectionSite = document.head) {\n    let styleTag;\n    if (injectionSite.querySelector(`#${id}`)) { // overwrites existing\n        styleTag = injectionSite.querySelector(`#${id}`);\n        styleTag.textContent = css;\n    } else { // creates new\n        styleTag = document.createElement('style');\n        styleTag.id = id;\n        // injectionSite.appendChild(styleTag);\n        injectionSite.insertBefore(styleTag, injectionSite.firstChild);\n        styleTag.textContent = css;\n    }\n}\n\n// export function injectCss(css, id = 'js-added-style', injectionSite = document.head) {\n//     if (injectionSite.querySelector(`#${id}`)) return; // only do this it once\n//     const styleTag = document.createElement('style');\n//     styleTag.id = id;\n//     // injectionSite.appendChild(styleTag);\n//     injectionSite.insertBefore(styleTag, injectionSite.firstChild);\n//     styleTag.textContent = css;\n// }\n\n// export function ejectCss(id = 'js-added-style', injectionSite = document.head) {\n//     const styleTag = injectionSite.querySelector(`#${id}`);\n//     if (styleTag) styleTag.remove();\n// }\n\n// export function slugify(string) {\n//     return string.toString().toLowerCase()\n//         .normalize('NFD')\n//         .replace(/[\\u0300-\\u036f]/g, '')\n//         .replace(/\\s+/g, '-')\n//         .replace(/&/g, '-and-')\n//         .replace(/[^\\w\\-]+/g, '')\n//         .replace(/\\-\\-+/g, '-')\n//         .replace(/^-+/, '')\n//         .replace(/-+$/, '');\n// }\n", "import { updateCss } from \"./utils.js\";\n\nexport function hideScrubberThumb(thumbElement='#scrubber') { \n    updateCss(` ${thumbElement}::-webkit-slider-thumb { scale:0; opacity:0; transition: scale .2s ease-in-out, opacity .3s var(--back-out, ease-out); } ${thumbElement}::-moz-range-thumb { scale:0; opacity:0; transition: scale .2s ease-in-out, opacity .3s var(--back-out, ease-out); } `);\n}\n\nexport function showScrubberThumb(thumbElement='#scrubber') { \n    updateCss(` ${thumbElement}::-webkit-slider-thumb { scale: 1; opacity: 1; } ${thumbElement}::-moz-range-thumb { scale: 1; opacity: 1; } `);\n}\n", "/**\n * A function that returns the HTML string for a podcast player.\n * @param {string} src - The source URL of the audio file.\n * @param {string} title - The title of the episode.\n * @param {string} thumb - The thumbnail image URL.\n * @param {string} totalTime - The total time duration.\n * @param {string} position - The position of the player.\n * @param {string} variation - The variation of the player.\n * @returns {string} The HTML string for the podcast player.\n */\nexport default function podcastPlayerTemplate(props) {\n    const { src, title, thumb, totalTime = '', position = '', variation = '', svgBase } = props;\n    return ` <div class=\"pp-wrapper\"> <div> <slot></slot> </div> <audio preload=\"metadata\" src=\"${src}\"></audio> <div class=\"podcast-player\" data-variation=\"${variation}\" data-position=\"${position}\" inert hidden> ${renderHeader(thumb)} ${renderMain(title, totalTime, svgBase)} ${renderFooter(svgBase)} </div> </div> `;}\n\nfunction renderHeader(thumb) {\n    return thumb ? `<header style=\"background-image: url('${thumb}')\"></header>` : '';\n}\n\nfunction renderFooter(svgBase) {\n    return ` <footer class=\"flex space-between\"> <button title=\"Close player\" class=\"invert | podcast-icon circle-small icon-close\" id=\"icon-close\"> <svg style=\"width: 1.5rem; height: 1.5rem; scale: .75;\"> <use href=\"${svgBase}#close-icon\"></use> </svg> </button> <button title=\"Change position\" type=\"button\" class=\"invert | podcast-icon circle-small icon-move\"> <svg style=\"height:1.5rem; width:1.5rem; scale: .6;\"> <use href=\"${svgBase}#move-icon\"></use> </svg> </button> </footer>`;\n}\n\nfunction renderShowAndPlay(src, svgBase) {\n    return ` <a href=\"${src}\" class=\"show-and-play\"> <div> <svg aria-hidden=\"true\"><use href=\"${svgBase}#play-circle-solid\"></use></svg> <b>Play</b> </div> <div> <svg aria-hidden=\"true\"><use href=\"${svgBase}#pause-circle\"></use></svg> <span>Pause</span> </div> <div> <svg aria-hidden=\"true\"><use href=\"${svgBase}#play-circle\"></use></svg> <span>Resume</span> </div> </a>`;\n}\n\nfunction renderMain(title, totalTime, svgBase) {\n    return ` <div class=\"main controls flex width-100\"> <section> <button class=\"play-pause icon-button circle podcast-icon\"> <div> <svg><use href=\"${svgBase}#play-solid\"></use></svg> <span class=\"visually-hidden\">Play</span> </div> <div> <svg><use href=\"${svgBase}#pause-solid\"></use></svg> <span class=\"visually-hidden\">Pause</span> </div> </button> <div id=\"time-display-current\" class=\"controls-surface flex\"> <time>00:00</time> <button type=\"button\" title=\"Share with current timestamp\" style=\"color: hsl(var(--clr-hue) var(--clr-sat) 12.5% / 100%); border-radius: 8px;\" class=\"share-button | ghost icon-button\"> <div class=\"bg-icon\" style=\"background-image: url(${svgBase}#share-icon);\"> <span class=\"visually-hidden\">Share</span> </div> </button> </div> <label for=\"scrubber\" class=\"flex\"> <span class=\"visually-hidden\">Seek Bar</span> <input type=\"range\" id=\"scrubber\" min=\"0\" max=\"0\" value=\"0\"> </label> <div id=\"time-display-end\" class=\"controls-surface mr-small\"><time>${totalTime || ' --&thinsp;:&thinsp;-- '}</time></div> </section> <section> <h3 class=\"audio-title\" title=\"${title}\">${title}</h3> <div class=\"controls-surface-2 flex\"> <button class=\"mute podcast-icon\"> <svg class=\"button-icon mute-svg\" aria-label=\"Mute\"><use href=\"${svgBase}#unmute-icon\"></use></svg> <svg class=\"button-icon unmute-svg hidden\" aria-label=\"Unmute\"><use href=\"${svgBase}#mute-icon\"></use></svg> </button> <div class=\"flex | volume-group | controls-surface\" style=\"margin-block: 1px;\"> <label for=\"volume-control\" class=\"visually-hidden\">Volume</label> <input data-size=\"small\" type=\"range\" id=\"volume-control\" class=\"volume\" value=\".35\" min=\"0\" max=\"1\" step=\"0.01\" title=\"Volume\"> </div> <div class=\"flex\"> <label for=\"speed-control\" class=\"visually-hidden\">Speed</label> <select title=\"Playback speed\" data-size=\"small\" id=\"speed-control\" class=\"podcast-icon\"> <option value=\"0.2\">0.2x</option><option value=\"0.5\">0.5x</option> <option value=\"1\" selected>1.0x</option><option value=\"1.2\">1.2x</option><option value=\"1.5\">1.5x</option><option value=\"1.7\">1.7x</option> <option value=\"2\">2.0x</option><option value=\"2.2\">2.2x</option><option value=\"2.5\">2.5x</option><option value=\"2.7\">2.7x</option> </select> </div> </div> </section> </div>`;\n}", "import { showScrubberThumb, hideScrubberThumb } from \"./helpers/fade-scrubber-thumb.js\";\nimport { isIOS, formatTime, initLocalStorageItem, throttle } from './helpers/utils.js';\nimport podcastPlayerTemplate from './template.js';\n\n// Custom Element\nexport default class PodcastPlayer extends HTMLElement {\n\n    constructor() {\n        super();\n        this.showOn = this.getAttribute('show-on');\n        this.initSrcAttribute();\n        this.initSvgBaseAttribute();\n        this.initLocalStorage();\n    }\n    \n    connectedCallback() {\n        this.scopeStyles();\n        this.injectStylesFromGlobal();\n\n        this.injectTemplate();\n        this.initRefs();\n        this.processLightDomIcons();\n        this.initUi();\n\n        this.addEventListeners();\n        this.addShareFunctionality();\n        this.addShowOn();\n    }\n\n    disconnectedCallback() {\n        document.querySelector('body').classList.remove('audio-playing', 'audio-paused');\n    }\n\n    // Refs\n    initRefs() {\n        // Element references\n        this.showAndPlay = this.querySelector('.show-and-play'); // slotted from Light DOM\n        const el = this.shadowRoot ?? this;\n        this.ppWrapper = el.querySelector('.pp-wrapper');\n        this.audio = el.querySelector('audio');\n        this.podcastPlayer = el.querySelector('.podcast-player');\n        this.playPauseButton = el.querySelector('.play-pause');\n        this.scrubber = el.querySelector('#scrubber');\n        this.timeDisplayCurrent = el.querySelector('#time-display-current time');\n        this.timeDisplayEnd = el.querySelector('#time-display-end time');\n        this.muteButton = el.querySelector('.mute');\n        this.volumeControl = el.querySelector('#volume-control');\n        this.speedControl = el.querySelector('#speed-control');\n        this.shareButton = el.querySelector('.share-button');\n        this.moveButton = el.querySelector('.icon-move');\n        this.closeButton = el.querySelector('.icon-close');\n        this.volumeGroup = el.querySelector('.volume-group');\n    }\n\n    // Event Listeners\n    addEventListeners() {\n        const rh = this.registerHandler.bind(this);\n        this.handlers = [];\n        // add handle- functions as methods of this class\n        rh(this.handleShowAndPlay, this.showAndPlay);\n        rh(this.handleTogglePlayPause, this.playPauseButton);\n\n        rh(this.handleMouseEnterShowAndPlay, this.showAndPlay, 'mouseenter');\n        rh(this.handleMouseLeaveShowAndPlay, this.showAndPlay, 'mouseleave');\n        rh(this.handleMouseEnterPlayPause, this.playPauseButton, 'mouseenter');\n        rh(this.handleMouseLeavePlayPause, this.playPauseButton, 'mouseleave');\n        rh(this.handleMouseEnterClose, this.closeButton, 'mouseenter');\n        rh(this.handleMouseLeaveClose, this.closeButton, 'mouseleave');\n\n        // display the duration if the metadata of the audio is available. If it is not available, we add the event listener\n        // see: https://css-tricks.com/lets-create-a-custom-audio-player/#aa-display-the-audio-duration\n        // rh(handleLoadMetadata, this.audio, 'loadedmetadata');\n        if (this.audio.readyState > 0) this.handleLoadMetadata();\n        else rh(this.handleLoadMetadata, this.audio, 'loadedmetadata');\n\n        rh(this.handleUpdateTime, this.audio, 'timeupdate');\n        rh(this.handleScrub, this.scrubber, 'input');\n        rh(this.handleChangeSpeed, this.speedControl, 'change');\n        rh(this.handleControlVolume, this.volumeControl, 'input');\n        rh(this.handleToggleMute, this.muteButton);\n        rh(this.handleMove, this.moveButton);\n        rh(this.handleClose, this.closeButton);\n    }\n\n\n    // Handlers\n\n    handleToggleMute() {\n        this.audio.muted = !this.audio.muted;\n        localStorage.setItem('pp-mute', this.audio.muted);\n        if (this.audio.muted) {\n            this.muteButton.querySelector('.mute-svg').classList.add('hidden');\n            this.muteButton.querySelector('.unmute-svg').classList.remove('hidden');\n        } else {\n            this.muteButton.querySelector('.mute-svg').classList.remove('hidden');\n            this.muteButton.querySelector('.unmute-svg').classList.add('hidden');\n        }\n    }\n\n    handleClose(event) {\n        if (this.audio.paused === false) this.handleShowAndPlay(event);\n        this.podcastPlayer.classList.remove('show');\n        this.removeAttribute('showing-player');\n        this.podcastPlayer.setAttribute('inert', '');\n    }\n\n    handleMove() {\n        if (this.podcastPlayer.dataset.position !== 'top') {\n            localStorage.setItem('pp-position', 'top');\n            this.setAttribute('data-position', 'top');\n            this.podcastPlayer.dataset.position = 'top';\n        }\n        else {\n            localStorage.setItem('pp-position', 'bottom');\n            this.setAttribute('data-position', 'bottom');\n            this.podcastPlayer.dataset.position = 'bottom';\n        }\n    }\n\n    handleShowAndPlay(event) {\n        event.preventDefault();\n        this.showPlayer();\n        this.handleTogglePlayPause(event);\n    }\n\n    beforePlay() {\n        const audio = this.audio;\n        audio.playbackRate = localStorage.getItem('pp-speed') || 1;\n        audio.volume = localStorage.getItem('pp-volume') ?? .7;\n        // if the audio isn't muted but it should be (from localStorage)\n        if (!audio.muted && localStorage.getItem('pp-mute') === 'true')\n            this.handleToggleMute();\n    }\n\n    handleTogglePlayPause(event) {\n        event.preventDefault();\n        const audio = this.audio;\n        if (audio.paused) { // \u25B6\uFE0E\n            this.beforePlay();\n            audio.play();\n            this.ppWrapper.classList.add('audio-playing');\n            document.querySelector('body').classList.add('audio-playing');\n            this.ppWrapper.classList.remove('audio-paused');\n            document.querySelector('body').classList.remove('audio-paused');\n        } else { // \u275A\u275A\n            audio.pause();\n            this.ppWrapper.classList.add('audio-paused');\n            document.querySelector('body').classList.add('audio-paused');\n            this.ppWrapper.classList.remove('audio-playing');\n            document.querySelector('body').classList.remove('audio-playing');\n        }\n    }\n\n    handleLoadMetadata() {\n        const duration = this.audio.duration;\n        this.scrubber.max = duration;\n        this.timeDisplayEnd.textContent = formatTime(duration);\n        this.updateSecondsFromUrl();\n        const currentTime = this.audio.currentTime;\n        this.timeDisplayCurrent.textContent = formatTime(currentTime);\n        this.scrubber.value = currentTime;\n        showScrubberThumb(); // show scrubber after it's been set\n    }\n\n    // handleUpdateTime() {\n    //     const currentTime = this.audio.currentTime;\n    //     this.scrubber.value = currentTime;\n    //     this.timeDisplayCurrent.textContent = formatTime(currentTime);\n    // }\n\n    handleUpdateTime = throttle(function () {\n        const currentTime = this.audio.currentTime;\n        this.scrubber.value = currentTime;\n        this.timeDisplayCurrent.textContent = formatTime(currentTime);\n    }, 300); // don't run more than once per this many milliseconds\n\n    handleScrub() {\n        this.audio.currentTime = this.scrubber.value;\n    }\n\n    handleChangeSpeed() {\n        this.audio.playbackRate = this.speedControl.value;\n        localStorage.setItem('pp-speed', this.speedControl.value);\n    }\n\n    handleControlVolume() {\n        this.audio.volume = this.volumeControl.value;\n        localStorage.setItem('pp-volume', this.volumeControl.value);\n    }\n\n    // Hover Handlers\n    handleMouseEnterShowAndPlay() { this.podcastPlayer.classList.add('related-hover'); }\n    handleMouseLeaveShowAndPlay() { this.podcastPlayer.classList.remove('related-hover'); }\n    handleMouseEnterPlayPause() { this.showAndPlay.classList.add('related-hover'); }\n    handleMouseLeavePlayPause() { this.showAndPlay.classList.remove('related-hover'); }\n    handleMouseEnterClose() { this.showAndPlay.classList.add('related-hover'); }\n    handleMouseLeaveClose() { this.showAndPlay.classList.remove('related-hover'); }\n\n\n    // Helpers\n\n    registerHandler(fn, el, ev = 'click') {\n        this[fn.name] = fn.bind(this);\n        el.addEventListener(ev, this[fn.name]);\n        this.handlers.push([fn, el, ev]);\n    }\n\n    unregisterHandler(fn, el, ev = 'click') {\n        el.removeEventListener(ev, this[fn.name]);\n    }\n\n    addShowOn() {\n        if (this.showOn === 'scroll' || !this.showOn) this.addIntersectionObserver();\n        if (this.showOn === 'click') return;\n        if (this.showOn === 'load') this.showPlayer();\n        if (this.showOn === 'hover') this.showAndPlay.addEventListener('mouseenter', () => this.showPlayer() );\n    }\n\n    addIntersectionObserver() {\n        const observerOptions = {\n            threshold: 1,\n            rootMargin: \"100px 0px -100px 0px\",\n        };\n        let flag = 0;\n        const observer = new IntersectionObserver((entry) => {\n            if (!entry.isIntersecting) {\n                if (flag) {\n                    this.showPlayer();\n                    observer.unobserve(this.showAndPlay);\n                } else { flag = 1; }\n            }\n        }, observerOptions);\n        observer.observe(this.showAndPlay);\n    }\n\n    addShareFunctionality() {\n        if (!navigator.share) { this.shareButton.style.display = 'none'; return; }\n        this.shareButton.addEventListener('click', event => {\n            const seconds = Math.floor(this.audio.currentTime);\n            const url = new URL(window.location.href);\n            if (seconds) url.searchParams.set('seconds', seconds);\n            const urlStr = url.toString();\n            const title = document.title + (seconds ? ` (${formatTime(seconds)})` : '');\n            navigator.share({ title: title, url: urlStr }).catch(() => null);\n        });\n    }\n\n    showPlayer() {\n        this.podcastPlayer.classList.add('show');\n        this.setAttribute('showing-player', '');\n        this.podcastPlayer.removeAttribute('inert');\n        this.podcastPlayer.hidden = false;\n    }\n\n    initLocalStorage() {\n        // set default values if they don't exist\n        initLocalStorageItem('pp-position', this.getAttribute('data-position') ?? 'bottom');\n        initLocalStorageItem('pp-volume', .7);\n        initLocalStorageItem('pp-speed', 1);\n        initLocalStorageItem('pp-mute', false);\n    }\n\n    updateSecondsFromUrl() {\n        // if ?seconds= in URL, show the player and set the currentTime\n        let url = new URL(window.location.href);\n        let seconds = url.searchParams.get('seconds');\n        if (seconds) {\n            this.audio.currentTime = seconds;\n            url.searchParams.delete('seconds');\n            window.history.pushState({}, '', url);\n            this.showPlayer();\n        }\n    }\n\n    initUi() {\n        this.audio.hidden = true; // hide native audio element\n    \n        const position = localStorage.getItem('pp-position');\n        this.setAttribute('data-position', position);\n        this.podcastPlayer.dataset.position = position;\n    \n        const variation = this.getAttribute('data-variation'); // not stored in localStorage\n        this.podcastPlayer.dataset.variation = variation;\n    \n        this.speedControl.value = localStorage.getItem('pp-speed');\n        this.volumeControl.value = localStorage.getItem('pp-volume');\n        hideScrubberThumb(); // hide scrubber thumb (gets shown in handleLoadMetadata)\n        if (isIOS()) { // hide volume on iOS\n            this.volumeGroup.style.display = 'none';\n        }\n    }\n\n    injectTemplate() {\n        const el = this.shadowRoot ?? this;\n        el.innerHTML += podcastPlayerTemplate({\n            src: this.getAttribute('data-src'),\n            title: this.getAttribute('data-title'),\n            thumb: this.getAttribute('data-thumb'),\n            position: this.getAttribute('data-position'),\n            variation: this.getAttribute('data-variation'),\n            svgBase: this.getAttribute('svg-base'),\n        });\n    }\n\n    initSrcAttribute() {\n        if (this.hasAttribute('data-src')) return;\n        const src = this.querySelector('.show-and-play').getAttribute('href');\n        this.setAttribute('data-src', src);\n    }\n\n    initSvgBaseAttribute() {\n        if (this.hasAttribute('svg-base')) return;\n        const selector = `link.fpp[rel=icon-sprite-sheet]`;\n        const svgBase = document.querySelector(selector)?.getAttribute('href');\n        if(!svgBase) return;\n        this.setAttribute('svg-base', svgBase);\n    }\n\n    processLightDomIcons() {\n        const icons = this.showAndPlay.querySelectorAll('[icon-name]');\n        const svgBase = this.getAttribute('svg-base');\n        icons.forEach(icon => {    \n            // Wrap existing content in a span\n            const spanElement = document.createElement('span');\n            while (icon.firstChild) spanElement.appendChild(icon.firstChild);\n            icon.appendChild(spanElement);\n    \n            // Add SVG element\n            const iconName = icon.getAttribute('icon-name');\n            const svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            const useElement = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n            useElement.setAttribute('href', `${svgBase}#${iconName}`);\n            svgElement.appendChild(useElement);\n            svgElement.setAttribute('aria-hidden', 'true');\n            icon.insertBefore(svgElement, icon.firstChild);\n        });\n    }\n\n    scopeStyles() {\n\t\t// Add Shadow DOM if not added yet\n\t\tif (!this.shadowRoot) {\n\t\t\tthis.attachShadow({ mode: 'open' });\t\t\n\t\t\t// slot any existing content (Light DOM)\n\t\t\t// const slot = document.createElement('slot');\n\t\t\t// this.shadowRoot.appendChild(slot);\n        }\n\t\t// Add the scoped stylesheet(s)\n\t\tconst selector = \"link.fpp[media=none][rel=stylesheet]\";\n        const stylesheets = document.querySelectorAll(selector);\n        if (!stylesheets) return;\n\t\tstylesheets.forEach(stylesheet => {\n\t\t\tconst clone = stylesheet.cloneNode(true);\n\t\t\tclone.setAttribute(\"media\", \"all\");\n            this.shadowRoot.appendChild(clone);\n        });\n    }\n    \n    injectStylesFromGlobal() {\n        const selector = \"link.fpp[rel=stylesheet]:not([media=none])\";\n        const stylesheets = document.querySelectorAll(selector);\n        if (!stylesheets) return;\n        stylesheets.forEach(stylesheet => {\n\t\t\tconst clone = stylesheet.cloneNode(true);\n            this.shadowRoot.appendChild(clone);\n        });\n    }\n\n}\n\ncustomElements.define('podcast-player', PodcastPlayer);"],
  "mappings": "AAEO,SAASA,EAAWC,EAAM,CAC7B,IAAMC,EAAQ,KAAK,MAAMD,EAAO,IAAI,EAC9BE,EAAU,KAAK,MAAOF,EAAO,KAAQ,EAAE,EACvCG,EAAU,KAAK,MAAMH,EAAO,EAAE,EACpC,OAAOC,EAAQ,EACT,GAAGA,EAAM,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,IAAIC,EAAQ,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,IAAIC,EAAQ,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,GAClH,GAAGD,EAAQ,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,IAAIC,EAAQ,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,EACvF,CAEO,SAASC,GAAQ,CACpB,MAAO,6BAA6B,KAAK,UAAU,SAAS,GAAK,CAAC,OAAO,UAAa,UAAU,gBAAkB,UAAU,eAAiB,CACjJ,CAGO,SAASC,EAAqBC,EAAGC,EAAK,CACpC,aAAa,QAAQD,CAAC,GAAK,aAAa,QAAQA,EAAGC,CAAG,CAC/D,CAIO,SAASC,EAASC,EAAMC,EAAO,CAClC,IAAIC,EACAC,EACJ,OAAO,YAAaC,EAAM,CACtB,IAAMC,EAAU,KACXF,GAID,aAAaD,CAAQ,EACrBA,EAAW,WAAW,UAAY,CACzB,KAAK,IAAI,EAAIC,GAAYF,IAC1BD,EAAK,MAAMK,EAASD,CAAI,EACxBD,EAAU,KAAK,IAAI,EAE3B,EAAGF,GAAS,KAAK,IAAI,EAAIE,EAAQ,IATjCH,EAAK,MAAMK,EAASD,CAAI,EACxBD,EAAU,KAAK,IAAI,EAU3B,CACJ,CAEO,SAASG,EAAUC,EAAKC,EAAK,iBAAkBC,EAAgB,SAAS,KAAM,CACjF,IAAIC,EACAD,EAAc,cAAc,IAAID,CAAE,EAAE,GACpCE,EAAWD,EAAc,cAAc,IAAID,CAAE,EAAE,EAC/CE,EAAS,YAAcH,IAEvBG,EAAW,SAAS,cAAc,OAAO,EACzCA,EAAS,GAAKF,EAEdC,EAAc,aAAaC,EAAUD,EAAc,UAAU,EAC7DC,EAAS,YAAcH,EAE/B,CCpDO,SAASI,EAAkBC,EAAa,YAAa,CACxDC,EAAU,IAAID,CAAY,4HAA4HA,CAAY,uHAAuH,CAC7R,CAEO,SAASE,EAAkBF,EAAa,YAAa,CACxDC,EAAU,IAAID,CAAY,oDAAoDA,CAAY,+CAA+C,CAC7I,CCEe,SAARG,EAAuCC,EAAO,CACjD,GAAM,CAAE,IAAAC,EAAK,MAAAC,EAAO,MAAAC,EAAO,UAAAC,EAAY,GAAI,SAAAC,EAAW,GAAI,UAAAC,EAAY,GAAI,QAAAC,CAAQ,EAAIP,EACtF,MAAO,uFAAuFC,CAAG,0DAA0DK,CAAS,oBAAoBD,CAAQ,mBAAmBG,EAAaL,CAAK,CAAC,IAAIM,EAAWP,EAAOE,EAAWG,CAAO,CAAC,IAAIG,EAAaH,CAAO,CAAC,iBAAkB,CAE9T,SAASC,EAAaL,EAAO,CACzB,OAAOA,EAAQ,yCAAyCA,CAAK,gBAAkB,EACnF,CAEA,SAASO,EAAaH,EAAS,CAC3B,MAAO,gNAAgNA,CAAO,6MAA6MA,CAAO,+CACtb,CAMA,SAASI,EAAWC,EAAOC,EAAWC,EAAS,CAC3C,MAAO,2IAA2IA,CAAO,oGAAoGA,CAAO,sZAAsZA,CAAO,iTAAiTD,GAAa,yBAAyB,qEAAqED,CAAK,KAAKA,CAAK,iJAAiJE,CAAO,wGAAwGA,CAAO,y2BACv1C,CCvBA,IAAqBC,EAArB,cAA2C,WAAY,CAEnD,aAAc,CACV,MAAM,EACN,KAAK,OAAS,KAAK,aAAa,SAAS,EACzC,KAAK,iBAAiB,EACtB,KAAK,qBAAqB,EAC1B,KAAK,iBAAiB,CAC1B,CAEA,mBAAoB,CAChB,KAAK,YAAY,EACjB,KAAK,uBAAuB,EAE5B,KAAK,eAAe,EACpB,KAAK,SAAS,EACd,KAAK,qBAAqB,EAC1B,KAAK,OAAO,EAEZ,KAAK,kBAAkB,EACvB,KAAK,sBAAsB,EAC3B,KAAK,UAAU,CACnB,CAEA,sBAAuB,CACnB,SAAS,cAAc,MAAM,EAAE,UAAU,OAAO,gBAAiB,cAAc,CACnF,CAGA,UAAW,CAEP,KAAK,YAAc,KAAK,cAAc,gBAAgB,EACtD,IAAMC,EAAK,KAAK,YAAc,KAC9B,KAAK,UAAYA,EAAG,cAAc,aAAa,EAC/C,KAAK,MAAQA,EAAG,cAAc,OAAO,EACrC,KAAK,cAAgBA,EAAG,cAAc,iBAAiB,EACvD,KAAK,gBAAkBA,EAAG,cAAc,aAAa,EACrD,KAAK,SAAWA,EAAG,cAAc,WAAW,EAC5C,KAAK,mBAAqBA,EAAG,cAAc,4BAA4B,EACvE,KAAK,eAAiBA,EAAG,cAAc,wBAAwB,EAC/D,KAAK,WAAaA,EAAG,cAAc,OAAO,EAC1C,KAAK,cAAgBA,EAAG,cAAc,iBAAiB,EACvD,KAAK,aAAeA,EAAG,cAAc,gBAAgB,EACrD,KAAK,YAAcA,EAAG,cAAc,eAAe,EACnD,KAAK,WAAaA,EAAG,cAAc,YAAY,EAC/C,KAAK,YAAcA,EAAG,cAAc,aAAa,EACjD,KAAK,YAAcA,EAAG,cAAc,eAAe,CACvD,CAGA,mBAAoB,CAChB,IAAMC,EAAK,KAAK,gBAAgB,KAAK,IAAI,EACzC,KAAK,SAAW,CAAC,EAEjBA,EAAG,KAAK,kBAAmB,KAAK,WAAW,EAC3CA,EAAG,KAAK,sBAAuB,KAAK,eAAe,EAEnDA,EAAG,KAAK,4BAA6B,KAAK,YAAa,YAAY,EACnEA,EAAG,KAAK,4BAA6B,KAAK,YAAa,YAAY,EACnEA,EAAG,KAAK,0BAA2B,KAAK,gBAAiB,YAAY,EACrEA,EAAG,KAAK,0BAA2B,KAAK,gBAAiB,YAAY,EACrEA,EAAG,KAAK,sBAAuB,KAAK,YAAa,YAAY,EAC7DA,EAAG,KAAK,sBAAuB,KAAK,YAAa,YAAY,EAKzD,KAAK,MAAM,WAAa,EAAG,KAAK,mBAAmB,EAClDA,EAAG,KAAK,mBAAoB,KAAK,MAAO,gBAAgB,EAE7DA,EAAG,KAAK,iBAAkB,KAAK,MAAO,YAAY,EAClDA,EAAG,KAAK,YAAa,KAAK,SAAU,OAAO,EAC3CA,EAAG,KAAK,kBAAmB,KAAK,aAAc,QAAQ,EACtDA,EAAG,KAAK,oBAAqB,KAAK,cAAe,OAAO,EACxDA,EAAG,KAAK,iBAAkB,KAAK,UAAU,EACzCA,EAAG,KAAK,WAAY,KAAK,UAAU,EACnCA,EAAG,KAAK,YAAa,KAAK,WAAW,CACzC,CAKA,kBAAmB,CACf,KAAK,MAAM,MAAQ,CAAC,KAAK,MAAM,MAC/B,aAAa,QAAQ,UAAW,KAAK,MAAM,KAAK,EAC5C,KAAK,MAAM,OACX,KAAK,WAAW,cAAc,WAAW,EAAE,UAAU,IAAI,QAAQ,EACjE,KAAK,WAAW,cAAc,aAAa,EAAE,UAAU,OAAO,QAAQ,IAEtE,KAAK,WAAW,cAAc,WAAW,EAAE,UAAU,OAAO,QAAQ,EACpE,KAAK,WAAW,cAAc,aAAa,EAAE,UAAU,IAAI,QAAQ,EAE3E,CAEA,YAAYC,EAAO,CACX,KAAK,MAAM,SAAW,IAAO,KAAK,kBAAkBA,CAAK,EAC7D,KAAK,cAAc,UAAU,OAAO,MAAM,EAC1C,KAAK,gBAAgB,gBAAgB,EACrC,KAAK,cAAc,aAAa,QAAS,EAAE,CAC/C,CAEA,YAAa,CACL,KAAK,cAAc,QAAQ,WAAa,OACxC,aAAa,QAAQ,cAAe,KAAK,EACzC,KAAK,aAAa,gBAAiB,KAAK,EACxC,KAAK,cAAc,QAAQ,SAAW,QAGtC,aAAa,QAAQ,cAAe,QAAQ,EAC5C,KAAK,aAAa,gBAAiB,QAAQ,EAC3C,KAAK,cAAc,QAAQ,SAAW,SAE9C,CAEA,kBAAkBA,EAAO,CACrBA,EAAM,eAAe,EACrB,KAAK,WAAW,EAChB,KAAK,sBAAsBA,CAAK,CACpC,CAEA,YAAa,CACT,IAAMC,EAAQ,KAAK,MACnBA,EAAM,aAAe,aAAa,QAAQ,UAAU,GAAK,EACzDA,EAAM,OAAS,aAAa,QAAQ,WAAW,GAAK,GAEhD,CAACA,EAAM,OAAS,aAAa,QAAQ,SAAS,IAAM,QACpD,KAAK,iBAAiB,CAC9B,CAEA,sBAAsBD,EAAO,CACzBA,EAAM,eAAe,EACrB,IAAMC,EAAQ,KAAK,MACfA,EAAM,QACN,KAAK,WAAW,EAChBA,EAAM,KAAK,EACX,KAAK,UAAU,UAAU,IAAI,eAAe,EAC5C,SAAS,cAAc,MAAM,EAAE,UAAU,IAAI,eAAe,EAC5D,KAAK,UAAU,UAAU,OAAO,cAAc,EAC9C,SAAS,cAAc,MAAM,EAAE,UAAU,OAAO,cAAc,IAE9DA,EAAM,MAAM,EACZ,KAAK,UAAU,UAAU,IAAI,cAAc,EAC3C,SAAS,cAAc,MAAM,EAAE,UAAU,IAAI,cAAc,EAC3D,KAAK,UAAU,UAAU,OAAO,eAAe,EAC/C,SAAS,cAAc,MAAM,EAAE,UAAU,OAAO,eAAe,EAEvE,CAEA,oBAAqB,CACjB,IAAMC,EAAW,KAAK,MAAM,SAC5B,KAAK,SAAS,IAAMA,EACpB,KAAK,eAAe,YAAcC,EAAWD,CAAQ,EACrD,KAAK,qBAAqB,EAC1B,IAAME,EAAc,KAAK,MAAM,YAC/B,KAAK,mBAAmB,YAAcD,EAAWC,CAAW,EAC5D,KAAK,SAAS,MAAQA,EACtBC,EAAkB,CACtB,CAQA,iBAAmBC,EAAS,UAAY,CACpC,IAAMF,EAAc,KAAK,MAAM,YAC/B,KAAK,SAAS,MAAQA,EACtB,KAAK,mBAAmB,YAAcD,EAAWC,CAAW,CAChE,EAAG,GAAG,EAEN,aAAc,CACV,KAAK,MAAM,YAAc,KAAK,SAAS,KAC3C,CAEA,mBAAoB,CAChB,KAAK,MAAM,aAAe,KAAK,aAAa,MAC5C,aAAa,QAAQ,WAAY,KAAK,aAAa,KAAK,CAC5D,CAEA,qBAAsB,CAClB,KAAK,MAAM,OAAS,KAAK,cAAc,MACvC,aAAa,QAAQ,YAAa,KAAK,cAAc,KAAK,CAC9D,CAGA,6BAA8B,CAAE,KAAK,cAAc,UAAU,IAAI,eAAe,CAAG,CACnF,6BAA8B,CAAE,KAAK,cAAc,UAAU,OAAO,eAAe,CAAG,CACtF,2BAA4B,CAAE,KAAK,YAAY,UAAU,IAAI,eAAe,CAAG,CAC/E,2BAA4B,CAAE,KAAK,YAAY,UAAU,OAAO,eAAe,CAAG,CAClF,uBAAwB,CAAE,KAAK,YAAY,UAAU,IAAI,eAAe,CAAG,CAC3E,uBAAwB,CAAE,KAAK,YAAY,UAAU,OAAO,eAAe,CAAG,CAK9E,gBAAgBG,EAAIT,EAAIU,EAAK,QAAS,CAClC,KAAKD,EAAG,IAAI,EAAIA,EAAG,KAAK,IAAI,EAC5BT,EAAG,iBAAiBU,EAAI,KAAKD,EAAG,IAAI,CAAC,EACrC,KAAK,SAAS,KAAK,CAACA,EAAIT,EAAIU,CAAE,CAAC,CACnC,CAEA,kBAAkBD,EAAIT,EAAIU,EAAK,QAAS,CACpCV,EAAG,oBAAoBU,EAAI,KAAKD,EAAG,IAAI,CAAC,CAC5C,CAEA,WAAY,EACJ,KAAK,SAAW,UAAY,CAAC,KAAK,SAAQ,KAAK,wBAAwB,EACvE,KAAK,SAAW,UAChB,KAAK,SAAW,QAAQ,KAAK,WAAW,EACxC,KAAK,SAAW,SAAS,KAAK,YAAY,iBAAiB,aAAc,IAAM,KAAK,WAAW,CAAE,EACzG,CAEA,yBAA0B,CACtB,IAAME,EAAkB,CACpB,UAAW,EACX,WAAY,sBAChB,EACIC,EAAO,EACLC,EAAW,IAAI,qBAAsBC,GAAU,CAC5CA,EAAM,iBACHF,GACA,KAAK,WAAW,EAChBC,EAAS,UAAU,KAAK,WAAW,GAC9BD,EAAO,EAExB,EAAGD,CAAe,EAClBE,EAAS,QAAQ,KAAK,WAAW,CACrC,CAEA,uBAAwB,CACpB,GAAI,CAAC,UAAU,MAAO,CAAE,KAAK,YAAY,MAAM,QAAU,OAAQ,MAAQ,CACzE,KAAK,YAAY,iBAAiB,QAASX,GAAS,CAChD,IAAMa,EAAU,KAAK,MAAM,KAAK,MAAM,WAAW,EAC3CC,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EACpCD,GAASC,EAAI,aAAa,IAAI,UAAWD,CAAO,EACpD,IAAME,EAASD,EAAI,SAAS,EACtBE,EAAQ,SAAS,OAASH,EAAU,KAAKV,EAAWU,CAAO,CAAC,IAAM,IACxE,UAAU,MAAM,CAAE,MAAOG,EAAO,IAAKD,CAAO,CAAC,EAAE,MAAM,IAAM,IAAI,CACnE,CAAC,CACL,CAEA,YAAa,CACT,KAAK,cAAc,UAAU,IAAI,MAAM,EACvC,KAAK,aAAa,iBAAkB,EAAE,EACtC,KAAK,cAAc,gBAAgB,OAAO,EAC1C,KAAK,cAAc,OAAS,EAChC,CAEA,kBAAmB,CAEfE,EAAqB,cAAe,KAAK,aAAa,eAAe,GAAK,QAAQ,EAClFA,EAAqB,YAAa,EAAE,EACpCA,EAAqB,WAAY,CAAC,EAClCA,EAAqB,UAAW,EAAK,CACzC,CAEA,sBAAuB,CAEnB,IAAIH,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EAClCD,EAAUC,EAAI,aAAa,IAAI,SAAS,EACxCD,IACA,KAAK,MAAM,YAAcA,EACzBC,EAAI,aAAa,OAAO,SAAS,EACjC,OAAO,QAAQ,UAAU,CAAC,EAAG,GAAIA,CAAG,EACpC,KAAK,WAAW,EAExB,CAEA,QAAS,CACL,KAAK,MAAM,OAAS,GAEpB,IAAMI,EAAW,aAAa,QAAQ,aAAa,EACnD,KAAK,aAAa,gBAAiBA,CAAQ,EAC3C,KAAK,cAAc,QAAQ,SAAWA,EAEtC,IAAMC,EAAY,KAAK,aAAa,gBAAgB,EACpD,KAAK,cAAc,QAAQ,UAAYA,EAEvC,KAAK,aAAa,MAAQ,aAAa,QAAQ,UAAU,EACzD,KAAK,cAAc,MAAQ,aAAa,QAAQ,WAAW,EAC3DC,EAAkB,EACdC,EAAM,IACN,KAAK,YAAY,MAAM,QAAU,OAEzC,CAEA,gBAAiB,CACb,IAAMvB,EAAK,KAAK,YAAc,KAC9BA,EAAG,WAAawB,EAAsB,CAClC,IAAK,KAAK,aAAa,UAAU,EACjC,MAAO,KAAK,aAAa,YAAY,EACrC,MAAO,KAAK,aAAa,YAAY,EACrC,SAAU,KAAK,aAAa,eAAe,EAC3C,UAAW,KAAK,aAAa,gBAAgB,EAC7C,QAAS,KAAK,aAAa,UAAU,CACzC,CAAC,CACL,CAEA,kBAAmB,CACf,GAAI,KAAK,aAAa,UAAU,EAAG,OACnC,IAAMC,EAAM,KAAK,cAAc,gBAAgB,EAAE,aAAa,MAAM,EACpE,KAAK,aAAa,WAAYA,CAAG,CACrC,CAEA,sBAAuB,CACnB,GAAI,KAAK,aAAa,UAAU,EAAG,OAEnC,IAAMC,EAAU,SAAS,cADR,iCAC8B,GAAG,aAAa,MAAM,EACjEA,GACJ,KAAK,aAAa,WAAYA,CAAO,CACzC,CAEA,sBAAuB,CACnB,IAAMC,EAAQ,KAAK,YAAY,iBAAiB,aAAa,EACvDD,EAAU,KAAK,aAAa,UAAU,EAC5CC,EAAM,QAAQC,GAAQ,CAElB,IAAMC,EAAc,SAAS,cAAc,MAAM,EACjD,KAAOD,EAAK,YAAYC,EAAY,YAAYD,EAAK,UAAU,EAC/DA,EAAK,YAAYC,CAAW,EAG5B,IAAMC,EAAWF,EAAK,aAAa,WAAW,EACxCG,EAAa,SAAS,gBAAgB,6BAA8B,KAAK,EACzEC,EAAa,SAAS,gBAAgB,6BAA8B,KAAK,EAC/EA,EAAW,aAAa,OAAQ,GAAGN,CAAO,IAAII,CAAQ,EAAE,EACxDC,EAAW,YAAYC,CAAU,EACjCD,EAAW,aAAa,cAAe,MAAM,EAC7CH,EAAK,aAAaG,EAAYH,EAAK,UAAU,CACjD,CAAC,CACL,CAEA,aAAc,CAEX,KAAK,YACT,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAO7B,IAAMK,EAAc,SAAS,iBADlB,sCAC2C,EACjDA,GACXA,EAAY,QAAQC,GAAc,CACjC,IAAMC,EAAQD,EAAW,UAAU,EAAI,EACvCC,EAAM,aAAa,QAAS,KAAK,EACxB,KAAK,WAAW,YAAYA,CAAK,CACrC,CAAC,CACL,CAEA,wBAAyB,CAErB,IAAMF,EAAc,SAAS,iBADZ,4CACqC,EACjDA,GACLA,EAAY,QAAQC,GAAc,CACvC,IAAMC,EAAQD,EAAW,UAAU,EAAI,EAC9B,KAAK,WAAW,YAAYC,CAAK,CACrC,CAAC,CACL,CAEJ,EAEA,eAAe,OAAO,iBAAkBpC,CAAa",
  "names": ["formatTime", "time", "hours", "minutes", "seconds", "isIOS", "initLocalStorageItem", "k", "val", "throttle", "func", "limit", "lastFunc", "lastRan", "args", "context", "updateCss", "css", "id", "injectionSite", "styleTag", "hideScrubberThumb", "thumbElement", "updateCss", "showScrubberThumb", "podcastPlayerTemplate", "props", "src", "title", "thumb", "totalTime", "position", "variation", "svgBase", "renderHeader", "renderMain", "renderFooter", "renderMain", "title", "totalTime", "svgBase", "PodcastPlayer", "el", "rh", "event", "audio", "duration", "formatTime", "currentTime", "showScrubberThumb", "throttle", "fn", "ev", "observerOptions", "flag", "observer", "entry", "seconds", "url", "urlStr", "title", "initLocalStorageItem", "position", "variation", "hideScrubberThumb", "isIOS", "podcastPlayerTemplate", "src", "svgBase", "icons", "icon", "spanElement", "iconName", "svgElement", "useElement", "stylesheets", "stylesheet", "clone"]
}
