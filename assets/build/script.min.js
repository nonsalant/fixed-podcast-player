function r(s){let t=Math.floor(s/3600),e=Math.floor(s%3600/60),o=Math.floor(s%60);return t>0?`${t.toString().padStart(2,"0")}:${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`:`${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`}function c(){return/iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent)&&!window.MSStream&&navigator.maxTouchPoints&&navigator.maxTouchPoints>1}function n(s,t){localStorage.getItem(s)||localStorage.setItem(s,t)}function p(s,t){let e,o;return function(...i){let a=this;o?(clearTimeout(e),e=setTimeout(function(){Date.now()-o>=t&&(s.apply(a,i),o=Date.now())},t-(Date.now()-o))):(s.apply(a,i),o=Date.now())}}function d(s,t="js-added-style",e=document.head){let o;e.querySelector(`#${t}`)?(o=e.querySelector(`#${t}`),o.textContent=s):(o=document.createElement("style"),o.id=t,e.insertBefore(o,e.firstChild),o.textContent=s)}function m(s="#scrubber"){d(` ${s}::-webkit-slider-thumb { scale:0; opacity:0; transition: scale .2s ease-in-out, opacity .3s var(--back-out, ease-out); } ${s}::-moz-range-thumb { scale:0; opacity:0; transition: scale .2s ease-in-out, opacity .3s var(--back-out, ease-out); } `)}function v(s="#scrubber"){d(` ${s}::-webkit-slider-thumb { scale: 1; opacity: 1; } ${s}::-moz-range-thumb { scale: 1; opacity: 1; } `)}function h(s){let{src:t,title:e,thumb:o,totalTime:i="",position:a="",variation:y="",svgBase:u}=s;return` <div class="pp-wrapper"> <div> ${f(t,u)} </div> <audio preload="auto" src="${t}"></audio> <div class="podcast-player" data-variation="${y}" data-position="${a}" inert> ${b(o)} ${S(e,i,u)} ${g(u)} </div> </div> `}function b(s){return s?`<header style="background-image: url('${s}')"></header>`:""}function g(s){return` <footer class="flex space-between"> <button title="Close player" class="invert | podcast-icon circle-small icon-close" id="icon-close"> <svg style="width: 1.5rem; height: 1.5rem; scale: .75;"> <use href="${s}#close-icon"></use> </svg> </button> <button title="Change position" type="button" class="invert | podcast-icon circle-small icon-move"> <svg style="height:1.5rem; width:1.5rem; scale: .6;"> <use href="${s}#move-icon"></use> </svg> </button> </footer>`}function f(s,t){return` <a href="${s}" class="show-and-play"> <div> <svg aria-hidden="true"><use href="${t}#play-circle-solid"></use></svg> <b>Play</b> </div> <div> <svg aria-hidden="true"><use href="${t}#pause-circle"></use></svg> <span>Pause</span> </div> <div> <svg aria-hidden="true"><use href="${t}#play-circle"></use></svg> <span>Resume</span> </div> </a>`}function S(s,t,e){return` <div class="main controls flex width-100"> <section> <button class="play-pause icon-button circle podcast-icon"> <div> <svg><use href="${e}#play-solid"></use></svg> <span class="visually-hidden">Play</span> </div> <div> <svg><use href="${e}#pause-solid"></use></svg> <span class="visually-hidden">Pause</span> </div> </button> <div id="time-display-current" class="controls-surface flex"> <time>00:00</time> <button type="button" title="Share with current timestamp" style="color: hsl(var(--clr-hue) var(--clr-sat) 12.5% / 100%); border-radius: 8px;" class="share-button | ghost icon-button"> <div class="bg-icon" style="background-image: url(${e}#share-icon);"> <span class="visually-hidden">Share</span> </div> </button> </div> <input type="range" id="scrubber" min="0" max="0" value="0"> <div id="time-display-end" class="controls-surface mr-small"><time>${t||" --&thinsp;:&thinsp;-- "}</time></div> </section> <section> <h3 class="audio-title" title="${s}">${s}</h3> <div class="controls-surface-2 flex"> <button class="mute podcast-icon"> <svg class="button-icon mute-svg" aria-label="Mute"><use href="${e}#unmute-icon"></use></svg> <svg class="button-icon unmute-svg hidden" aria-label="Unmute"><use href="${e}#mute-icon"></use></svg> </button> <div class="flex | volume-group | controls-surface" style="margin-block: 1px;"> <label for="volume-control" class="visually-hidden">Volume</label> <input data-size="small" type="range" id="volume-control" class="volume" value=".35" min="0" max="1" step="0.01" title="Volume"> </div> <div class="flex"> <label for="speed-control" class="visually-hidden">Speed</label> <select title="Playback speed" data-size="small" id="speed-control" class="podcast-icon"> <option value="0.2">0.2x</option><option value="0.5">0.5x</option> <option value="1" selected>1.0x</option><option value="1.2">1.2x</option><option value="1.5">1.5x</option><option value="1.7">1.7x</option> <option value="2">2.0x</option><option value="2.2">2.2x</option><option value="2.5">2.5x</option><option value="2.7">2.7x</option> </select> </div> </div> </section> </div>`}var l=class extends HTMLElement{constructor(){super(),this.showOn=this.getAttribute("show-on"),this.initLocalStorage()}connectedCallback(){this.injectTemplate(),this.initRefs(),this.initUi(),this.addEventListeners(),this.addShareFunctionality(),this.addShowOn()}handleToggleMute(){this.audio.muted=!this.audio.muted,localStorage.setItem("pp-mute",this.audio.muted),this.audio.muted?(this.muteButton.querySelector(".mute-svg").classList.add("hidden"),this.muteButton.querySelector(".unmute-svg").classList.remove("hidden")):(this.muteButton.querySelector(".mute-svg").classList.remove("hidden"),this.muteButton.querySelector(".unmute-svg").classList.add("hidden"))}handleClose(t){this.audio.paused===!1&&this.handleShowAndPlay(t),this.podcastPlayer.classList.remove("show"),this.removeAttribute("showing-player"),this.podcastPlayer.setAttribute("inert","")}handleMove(){this.podcastPlayer.dataset.position!=="top"?(localStorage.setItem("pp-position","top"),this.setAttribute("data-position","top"),this.podcastPlayer.dataset.position="top"):(localStorage.setItem("pp-position","bottom"),this.setAttribute("data-position","bottom"),this.podcastPlayer.dataset.position="bottom")}handleShowAndPlay(t){t.preventDefault(),this.showPlayer(),this.handleTogglePlayPause(t)}beforePlay(){let t=this.audio;t.playbackRate=localStorage.getItem("pp-speed")||1,t.volume=localStorage.getItem("pp-volume")??.7,!t.muted&&localStorage.getItem("pp-mute")==="true"&&this.handleToggleMute()}handleTogglePlayPause(t){t.preventDefault();let e=this.audio;e.paused?(this.beforePlay(),e.play(),this.ppWrapper.classList.add("audio-playing"),this.ppWrapper.classList.remove("audio-paused")):(e.pause(),this.ppWrapper.classList.add("audio-paused"),this.ppWrapper.classList.remove("audio-playing"))}handleLoadMetadata(){let t=this.audio.duration;this.scrubber.max=t,this.timeDisplayEnd.textContent=r(t),this.updateSecondsFromUrl();let e=this.audio.currentTime;this.timeDisplayCurrent.textContent=r(e),this.scrubber.value=e,v()}handleUpdateTime=p(function(){let t=this.audio.currentTime;this.scrubber.value=t,this.timeDisplayCurrent.textContent=r(t)},300);handleScrub(){this.audio.currentTime=this.scrubber.value}handleChangeSpeed(){this.audio.playbackRate=this.speedControl.value,localStorage.setItem("pp-speed",this.speedControl.value)}handleControlVolume(){this.audio.volume=this.volumeControl.value,localStorage.setItem("pp-volume",this.volumeControl.value)}registerHandler(t,e,o="click"){this[t.name]=t.bind(this),e.addEventListener(o,this[t.name]),this.handlers.push([t,e,o])}unregisterHandler(t,e,o="click"){e.removeEventListener(o,this[t.name])}addShowOn(){(this.showOn==="scroll"||!this.showOn)&&this.addIntersectionObserver(),this.showOn!=="click"&&(this.showOn==="load"&&this.showPlayer(),this.showOn==="hover"&&this.showAndPlay.addEventListener("mouseenter",()=>this.showPlayer()))}addIntersectionObserver(){let t={threshold:1,rootMargin:"100px 0px -100px 0px"},e=0,o=new IntersectionObserver(i=>{i.isIntersecting||(e?(this.showPlayer(),o.unobserve(this.showAndPlay)):e=1)},t);o.observe(this.showAndPlay)}addShareFunctionality(){if(!navigator.share){this.shareButton.style.display="none";return}this.shareButton.addEventListener("click",t=>{let e=Math.floor(this.audio.currentTime),o=new URL(window.location.href);e&&o.searchParams.set("seconds",e);let i=o.toString(),a=document.title+(e?` (${r(e)})`:"");navigator.share({title:a,url:i}).catch(()=>null)})}showPlayer(){this.podcastPlayer.classList.add("show"),this.setAttribute("showing-player",""),this.podcastPlayer.removeAttribute("inert")}addEventListeners(){let t=this.registerHandler.bind(this);this.handlers=[],t(this.handleShowAndPlay,this.showAndPlay),t(this.handleTogglePlayPause,this.playPauseButton),this.audio.readyState>0?this.handleLoadMetadata():t(this.handleLoadMetadata,this.audio,"loadedmetadata"),t(this.handleUpdateTime,this.audio,"timeupdate"),t(this.handleScrub,this.scrubber,"input"),t(this.handleChangeSpeed,this.speedControl,"change"),t(this.handleControlVolume,this.volumeControl,"input"),t(this.handleToggleMute,this.muteButton),t(this.handleMove,this.moveButton),t(this.handleClose,this.closeButton)}initRefs(){let t=this.shadowRoot??this;this.ppWrapper=t.querySelector(".pp-wrapper"),this.audio=t.querySelector("audio"),this.showAndPlay=t.querySelector(".show-and-play"),this.podcastPlayer=t.querySelector(".podcast-player"),this.playPauseButton=t.querySelector(".play-pause"),this.scrubber=t.querySelector("#scrubber"),this.timeDisplayCurrent=t.querySelector("#time-display-current time"),this.timeDisplayEnd=t.querySelector("#time-display-end time"),this.muteButton=t.querySelector(".mute"),this.volumeControl=t.querySelector("#volume-control"),this.speedControl=t.querySelector("#speed-control"),this.shareButton=t.querySelector(".share-button"),this.moveButton=t.querySelector(".icon-move"),this.closeButton=t.querySelector(".icon-close"),this.volumeGroup=t.querySelector(".volume-group")}initLocalStorage(){n("pp-position",this.getAttribute("data-position")??"bottom"),n("pp-volume",.7),n("pp-speed",1),n("pp-mute",!1)}updateSecondsFromUrl(){let t=new URL(window.location.href),e=t.searchParams.get("seconds");e&&(this.audio.currentTime=e,t.searchParams.delete("seconds"),window.history.pushState({},"",t),this.showPlayer())}initUi(){this.audio.hidden=!0;let t=localStorage.getItem("pp-position");this.setAttribute("data-position",t),this.podcastPlayer.dataset.position=t;let e=this.getAttribute("data-variation");this.podcastPlayer.dataset.variation=e,this.speedControl.value=localStorage.getItem("pp-speed"),this.volumeControl.value=localStorage.getItem("pp-volume"),m(),c()&&(this.volumeGroup.style.display="none")}injectTemplate(){let t=this.shadowRoot??this;t.innerHTML+=h({src:this.getAttribute("data-src"),title:this.getAttribute("data-title"),thumb:this.getAttribute("data-thumb"),position:this.getAttribute("data-position"),variation:this.getAttribute("data-variation"),svgBase:this.getAttribute("svg-base")})}};customElements.define("podcast-player",l);export{l as default};
//# sourceMappingURL=script.min.js.map
